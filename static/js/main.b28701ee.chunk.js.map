{"version":3,"sources":["components/Carousel/Carousel.tsx","utils/uuid-creator.ts","components/App/App.tsx","index.tsx"],"names":["Carousel","state","index","handleButtonClick","direction","setState","prevState","newIndex","parseInt","props","step","itemWidth","images","length","infinite","prevProps","this","frameSize","animationDuration","className","style","width","transform","transition","map","image","src","alt","dt","Date","getTime","replace","c","r","Math","random","floor","toString","createId","type","onClick","Component","App","carouselTitle","htmlFor","name","value","onChange","event","currentTarget","max","min","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b28701ee.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\nimport { createId } from '../../utils/uuid-creator';\n\ntype CarouselProps = {\n  images: string[],\n  step: string,\n  frameSize: string,\n  itemWidth: string,\n  animationDuration: string,\n  infinite: boolean,\n};\n\ntype State = {\n  index: number;\n};\n\nexport class Carousel extends Component<CarouselProps, State> {\n  state: State = {\n    index: 0,\n  };\n\n  componentDidUpdate(prevProps: CarouselProps) {\n    if (prevProps.itemWidth !== this.props.itemWidth\n      && this.state.index !== 0) {\n      this.setState({ index: 0 });\n    }\n  }\n\n  handleButtonClick = (direction: number) => {\n    this.setState((prevState) => {\n      const newIndex = prevState.index\n        + (direction\n          * parseInt(this.props.step, 10)\n          * parseInt(this.props.itemWidth, 10));\n\n      if (newIndex > 0\n        || -newIndex\n        >= (this.props.images.length\n          * parseInt(this.props.itemWidth, 10))) {\n        if (this.props.infinite && direction === -1) {\n          return {\n            index: 0,\n          };\n        }\n\n        return null;\n      }\n\n      return {\n        index: newIndex,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { index } = this.state;\n\n    const { handleButtonClick } = this;\n\n    return (\n      <div className=\"carousel\">\n        <div\n          className=\"carousel__container\"\n          style={{\n            width: `${parseInt(frameSize, 10)\n            * parseInt(itemWidth, 10)}px`,\n          }}\n        >\n          <ul\n            className=\"carousel__list\"\n            style={{\n              transform: `translateX(${index}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image) => (\n              <li\n                className=\"carousel__item\"\n                key={createId()}\n                style={{ width: `${itemWidth}px` }}\n              >\n                <img\n                  src={image}\n                  alt=\"Selected smile\"\n                  style={{ width: `${itemWidth}px` }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"carousel__button-wrapper\">\n          <button\n            className=\"carousel__button\"\n            type=\"button\"\n            onClick={() => handleButtonClick(1)}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"carousel__button\"\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={() => handleButtonClick(-1)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export const createId = () => {\n  let dt = new Date().getTime();\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    (c) => {\n      const r = (dt + Math.random() * 16) % 16 || 0;\n\n      dt = Math.floor(dt / 16);\n\n      return (c === 'x'\n        ? r\n        : ((r && 0x3) || 0x8)).toString(16);\n    });\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from '../Carousel';\n\ninterface State {\n  images: string[];\n  step: string;\n  frameSize: string;\n  itemWidth: string;\n  animationDuration: string;\n  infinite: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    infinite: false,\n    frameSize: '3',\n    itemWidth: '130',\n    animationDuration: '1000',\n    step: '3',\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const carouselTitle = `Carousel with ${images.length} images`;\n\n    return (\n      <div className=\"app\">\n        <h1 data-cy=\"title\" className=\"app__title\">{carouselTitle}</h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          step={step}\n        />\n\n        <div className=\"app__settings-container\">\n          <label\n            htmlFor=\"item-width\"\n            className=\"app__settings-block\"\n          >\n            <p className=\"app__settings-title\">Item width:</p>\n            <input\n              className=\"app__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frame-size\"\n            className=\"app__settings-block\"\n          >\n            <p className=\"app__settings-title\">Frame size:</p>\n            <input\n              className=\"app__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              max={5}\n              min={1}\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animation-duration\"\n            className=\"app__settings-block\"\n          >\n            <p className=\"app__settings-title\">Animation duration:</p>\n            <input\n              className=\"app__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({ animationDuration: event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"step\"\n            className=\"app__settings-block\"\n          >\n            <p className=\"app__settings-title\">Step:</p>\n            <input\n              className=\"app__input\"\n              type=\"number\"\n              name=\"step\"\n              max={5}\n              min={1}\n              value={step}\n              onChange={(event) => {\n                this.setState({ step: event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinite\"\n            className=\"app__settings-block\"\n          >\n            <p className=\"app__settings-title\">Infinite carousel:</p>\n            <input\n              className=\"app__input-checkbox\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={() => {\n                this.setState(prevState => {\n                  return {\n                    infinite: !prevState.infinite,\n                  };\n                });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}